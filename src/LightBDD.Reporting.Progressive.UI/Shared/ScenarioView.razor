@using LightBDD.Reporting.Progressive.UI.Models
@using LightBDD.Reporting.Progressive.UI.Utils
@implements IDisposable;
@inherits ModelViewComponent;

<div>
    <div>
        <span>@(ChangesCounter) @(Model.Status.ToString()) @(Model.Name.Name)</span>
        @if (Model.Labels.Any())
        {
            <span>[@(string.Join(", ",Model.Labels))]</span>
        }
        @if (Model.ExecutionTime.HasValue)
        {
            <span> (@((int)Model.ExecutionTime.Value.TotalMilliseconds)ms)</span>
        }
    </div>
    @if (Model.Steps.Any())
    {
        <div class="sub-group">
            @foreach (var step in Model.Steps)
            {
                <StepView Model="@step" />
            }
        </div>
    }
</div>

@code {

    private readonly ObservableProperty<IScenarioModel> _model;

    public ScenarioView()
    {
        _model = new ObservableProperty<IScenarioModel>(ModelHasChanged);
    }

    [Parameter]
    public IScenarioModel Model
    {
        get => _model.Value;
        set => _model.Value = value;
    }

    public void Dispose()
    {
        _model?.Dispose();
    }
}
