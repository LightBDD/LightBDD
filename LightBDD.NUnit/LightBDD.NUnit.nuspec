<?xml version="1.0"?>
<package >
  <metadata>
    <id>$id$</id>
    <version>$version$</version>
    <title>$title$</title>
    <authors>Wojciech Kotlarski</authors>
    <owners>Wojciech Kotlarski</owners>
    <licenseUrl>http://opensource.org/licenses/BSD-2-Clause</licenseUrl>
    <projectUrl>https://github.com/Suremaker/LightBDD</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Allows creating acceptance tests in developer friendly environment.

Features:
* Native support for refactoring, code analysis (like finding unused methods), test running and all features that Visual Studio / Intellisense / Resharper offer during code development,
* Easy to read scenario definitions,
* Scenario steps execution tracking, usable during longer test execution,
* Scenario steps execution time measurement,
* Possibility to run steps with dedicated shared context, allowing to run tests safely in parallel,
* Possibility to run parametrized steps with smart rules of inserting argument values to formatted step name,
* Feature result summary available in XML, HTML or Plain text format,
* Possibility to configure multiple result summaries in app.config file,
* VS Project Item templates for feature test files,
* NUnit integration.</description>
	<summary>$description$</summary>
    <releaseNotes>Summary:
+ major improvements to Html features report summary (HtmlResultFormatter),
+ added ability to bypass step execution without stopping scenario execution,
+ added ability to specify custom formatting rules for step parameters,
+ added ability to annotate scenarios with categories,
+ many smaller improvements.

Details:
+ added ability to bypass step execution without stopping scenario execution (StepExecution.Bypass() method and ResultStatus.Bypassed enum value)
+ added ability to specify custom formatting rules for step parameters (Format/ParameterFormatter Attributes)
+ added ability to annotate scenarios with categories (ScenarioCategoryAttribute and implementation specific attributes)
+ changed Scenario level StatusDetails property to aggregate all step status details
+ changed FeatureCoordinator to allow only one Finished() method call and report it's finalizer execution time and failures with System.Diagnostics.Trace()
+ enhanced parameterized steps to always capture constant parameter values, even if step has not been executed
+ enhanced IStepResult with StepName property providing detailed information on step name like base format, parameter list or step type (added IStepName, IStepNameDecorator, StepNameDecorators types)
+ HtmlResultFormatter: reorganized HTML output to support longer text in features and scenarios
+ HtmlResultFormatter: enhanced report to highlight step type and parameters
+ HtmlResultFormatter: added option to expand/collapse all features and/or scenarios
+ HtmlResultFormatter: added option to filter scenarios by category
+ HtmlResultFormatter: made Feature Summary table columns sortable
+ HtmlResultFormatter: added shareable link for speficic feature, scenario, Feature Details section and whole document, all preserving current filters selection
+ HtmlResultFormatter: added Average Duration column to Feature Summary block
+ HtmlResultFormatter: changed expand-collapse symbols to standard ones, to display them properly on android browsers
+ XmlResultFormatter: added step level StatusDetails element
+ PlainTextFormatter: labels are now printed after feature/scenario name, like in HtmlResultFormatter
+ all formatters: added information about scenario categories
+ TestMetadataProvider: added GetStepTypeName method
+ TestMetadataProvider: removed stepType from GetStepNameFormat signature, obsoleted version with stepType
+ added DebuggerStepThrough attribute to implementation specific metadata provider
+ exposed TimeFormatter extensions for pretty time span formatting</releaseNotes>
    <copyright>Copyright Â© Wojciech Kotlarski 2013-2014</copyright>
    <tags>bdd tdd testing framework behavior driven development acceptance criteria nunit</tags>
	<language>en-US</language>
	<dependencies>
		<group targetFramework=".NETFramework4.0">
			<dependency id="LightBDD.Core" version="$version$" />
		</group>
    </dependencies>
  </metadata>
  <files>
	<file src="..\Changelog.txt" target="." />
	<file src="..\LICENSE.txt" target="." />
	<file src="..\README.md" target="." />
	<file src="..\QuickStart.txt" target="readme.txt" />
	<file src="..\XmlResultFormatterSchema.xsd" target="." />
	<file src="..\Templates\LightBDD NUnit\*" target="Templates\LightBDD NUnit" />
  </files>
</package>