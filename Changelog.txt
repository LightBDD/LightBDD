LightBDD
===========================================

Version 1.5.2
----------------------------------------
+ changed parameterized steps to always display constant parameter values, even if step has not been executed
+ changed PlainTextFormatter to put labels after feature/scenario name, like HtmlResultFormatter does

Version 1.5.1.1
----------------------------------------
+ corrected HtmlResultFormatter to display long blocks of scenarios properly

Version 1.5.1
----------------------------------------
Summary:
+ added integration with MsTest framework
+ multiple improvements to Feature Summary generators
+ improved debugging experience of LightBDD scenarios
+ added XmlResultFormatterSchema.xsd
+ better support for mixing steps of simplified and extended syntax
Details:
+ extended HtmlResultFormatter to display switch to show/hide each feature and scenario details
+ extended HtmlResultFormatter to provide detailed summary about executed steps
+ improved HtmlResultFormatter css styles, added labels to check boxes
+ extended TestMetadataProvider to format stepType before is added to step name (allows to use methods like _ => Then_value_is(5))
+ reorganized example projects to show the same tests in different test frameworks
+ added integration with MsTest framework => LightBDD.MsTest
+ extended FeatureCoordinator with OnBeforeFinish / OnAfterFinish events
+ improved debugging experience of LightBDD scenarios
+ extended PlainTextResultFormatter and XmlResultFormatter to include summary blocks like in HtmlResultFormatter
+ added XmlResultFormatterSchema.xsd for FeaturesSummary.xml output xml file

Version 1.5.0
----------------------------------------
Summary:
+ fluent interface for scenario creation
+ parameterized steps support
+ capturing execution start and duration of scenarios and steps (https://github.com/Suremaker/LightBDD/issues/5)
+ improvements to HtmlResultFormatter
Details:
+ introduced IScenarioBuilder/ICustomizedScenarioBuilder fluent interfaces for scenario creation, added NewScenario() methods to AbstractBDDRunner
+ added support for parameterized steps in AbstractBDDRunner.RunScenario() / IScenarioBuilder.Run() methods
+ implemented argument insertion to parameterized step name
+ added support for proper capture of mutable step arguments
+ obsoleted all RunScenario() methods that allows to provide scenarioName or label
+ added execution start and execution time capture for steps and scenarios
+ altered IProgressNotifier.NotifyScenarioFinished() to accept IScenarioResult
+ added IProgressNotifier.NotifyStepFinished()
+ extended ConsoleProgressNotifier and PlainTextResultFormatter/XmlResultFormatter/HtmlResultFormatter to display execution times for steps and scenarios
+ extended HtmlResultFormatter to generate Execution and Feature summary
+ extended HtmlResultFormatter to generate filtering by status options for scenarios/features
+ corrected HtmlpResultFormatter styles for better experience of copying summary reports into Word documents
+ corrected HtmlResultFormatter to escape HTML specific characters in displayed text

Version 1.4.0
----------------------------------------
+ fixed PlainTextResultFormatter to be usable for feature summary generation
+ changed PlainTextResultFormatter to display status details below steps
+ added SummaryFileWriter allowing to save feature results summary to file in specified format
+ added SummaryGenerator with multiple summary writers support to aggregate and save feature results
+ added support for feature summary format/file name configuration in app.config file.
+ modified FeatureCoordinator to use SummaryGenerator as default Aggregator and use app.config to configure it
+ obsoleted TestResultsSummary and FeatureSummaryAggregator classes
+ modified example project to present how to use feature summary with app.config
+ modified way the NuGet packages are created so symbol packages are now generated as well

Version 1.3.0
----------------------------------------
+ added RunScenario() methods accepting shared context which allows to run tests safely in parallel
+ added examples for parallel test execution
+ added examples showing LightBDD behavior in case of test failure

Version 1.2.1
-----------------------------------------
+ added HtmlResultFormatter

Version 1.2.0
------------------------------------------
+ extracted NUnit related code to LightBDD.NUnit
+ introduced LightBDD.MbUnit to add support for MbUnit framework
+ made runner thread safe which allows to use Runner.RunScenario() in parallel
+ added FeatureDescription attribute which can be used to describe feature class no matter which testing framework is used

Version 1.1.4
-------------------------------------------
+ extended FeatureFixture with CreateProgressNotifier() method allowing to specify IProgressNotifier used by BDDRunner.

Version 1.1.3
-------------------------------------------
+ added StatusDetails to IStepResult and IScenarioResult, providing details for Failed/Ignored status
+ modified XmlResultFormatter, PlainTextResultFormatter and ConsoleProgressNotifier to include StatusDetails

Version 1.1.2
-------------------------------------------
+ fixed scenario name display for LightBDD being compiled in Release mode,
+ introduced [Label] attribute allowing to apply label on feature test class or scenario method (like ticket number)
+ adjusted result formatters and progress notifiers to include label

Version 1.1.1
-------------------------------------------
+ introduced TestCoordinator and FeatureSummaryAggregator
+ introduced FeatureFixture base class for feature tests
+ with usage of FeatureFixture, no additional classes are needed to create in order to save result summary
+ simplified Visual Studio Project Item Templates

Version 1.1.0
-------------------------------------------
+ added PlainTextResultFormatter and XmlResultFormatter to format test results
+ added TestResultsSummary class to collect all results and save them to xml file
+ added detection of feature name based on test class name
+ added feature description based on [Description] attribute
+ added Visual Studio Project Item templates to create base test classes and feature test classes

Version 1.0.0
-------------------------------------------
+ implemented BDDRunner with RunScenario method
+ added detection of scenario name based on calling method name
+ added step name formatting
+ added progress notification (on console)
